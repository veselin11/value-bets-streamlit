import streamlit as st
import sqlite3
import pandas as pd from datetime
import datetime

------------------- DB -------------------

conn = sqlite3.connect("bets.db", check_same_thread=False) c = conn.cursor()

c.execute(''' CREATE TABLE IF NOT EXISTS bets ( id INTEGER PRIMARY KEY AUTOINCREMENT, date TEXT, match TEXT, market TEXT, odds REAL, stake REAL, status TEXT, profit REAL ) ''') conn.commit()

------------------- FUNCTIONS -------------------

def add_bet(date, match, market, odds, stake, status): if status == "win": profit = (odds - 1) * stake elif status == "lose": profit = -stake else: profit = 0 c.execute("INSERT INTO bets (date, match, market, odds, stake, status, profit) VALUES (?, ?, ?, ?, ?, ?, ?)", (date, match, market, odds, stake, status, profit)) conn.commit()

def get_all_bets(): df = pd.read_sql_query("SELECT * FROM bets ORDER BY date DESC", conn) return df

def calculate_kpis(df): total_stake = df["stake"].sum() total_profit = df["profit"].sum() roi = (total_profit / total_stake) * 100 if total_stake > 0 else 0 win_rate = len(df[df["status"] == "win"]) / len(df) * 100 if len(df) > 0 else 0 avg_profit = df["profit"].mean() if len(df) > 0 else 0 return round(total_profit, 2), round(roi, 2), round(win_rate, 2), round(avg_profit, 2)

------------------- UI -------------------

st.title("üìà –¢—Ä–∞–∫–µ—Ä –∑–∞ —Å–ø–æ—Ä—Ç–Ω–∏ –∑–∞–ª–æ–∑–∏")

with st.form("add_bet"): st.subheader("‚ûï –î–æ–±–∞–≤–∏ –Ω–æ–≤ –∑–∞–ª–æ–≥") col1, col2 = st.columns(2) with col1: date = st.date_input("–î–∞—Ç–∞", value=datetime.today()) match = st.text_input("–ú–∞—á", placeholder="–ü—Ä–∏–º–µ—Ä: Man City vs Arsenal") market = st.selectbox("–ü–∞–∑–∞—Ä", ["1X2", "Over/Under", "Both teams to score", "–î—Ä—É–≥"]) with col2: odds = st.number_input("–ö–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç", min_value=1.01, step=0.01) stake = st.number_input("–ó–∞–ª–æ–∂–µ–Ω–∞ —Å—É–º–∞", min_value=0.1, step=0.1) status = st.selectbox("–°—Ç–∞—Ç—É—Å", ["win", "lose", "push"])

submitted = st.form_submit_button("–ó–∞–ø–∞–∑–∏ –∑–∞–ª–æ–≥–∞")
if submitted:
    add_bet(str(date), match, market, odds, stake, status)
    st.success("‚úÖ –ó–∞–ª–æ–≥—ä—Ç –µ –∑–∞–ø–∞–∑–µ–Ω —É—Å–ø–µ—à–Ω–æ!")

st.divider() st.subheader("üìã –ò—Å—Ç–æ—Ä–∏—è –Ω–∞ –∑–∞–ª–æ–∑–∏—Ç–µ")

bets_df = get_all_bets()

if not bets_df.empty: st.dataframe(bets_df, use_container_width=True)

st.subheader("üìä –ê–Ω–∞–ª–∏–∑ –Ω–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤—è–Ω–µ—Ç–æ")
profit, roi, winrate, avg_profit = calculate_kpis(bets_df)
col1, col2, col3, col4 = st.columns(4)
col1.metric("–û–±—â–∞ –ø–µ—á–∞–ª–±–∞", f"{profit:.2f} –ª–≤")
col2.metric("ROI", f"{roi:.2f}%")
col3.metric("–£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç", f"{winrate:.2f}%")
col4.metric("–°—Ä–µ–¥–Ω–∞ –ø–µ—á–∞–ª–±–∞ –Ω–∞ –∑–∞–ª–æ–≥", f"{avg_profit:.2f} –ª–≤")

else: st.info("–í—Å–µ –æ—â–µ –Ω—è–º–∞ –≤—ä–≤–µ–¥–µ–Ω–∏ –∑–∞–ª–æ–∑–∏.")

