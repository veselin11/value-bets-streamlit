import streamlit as st
import pandas as pd
import random
from datetime import datetime, timedelta
import matplotlib.pyplot as plt
import io

st.set_page_config(page_title="Value Bets", layout="wide")

# üß† –°–∏–º—É–ª–∏—Ä–∞–Ω–∏ –ø—Ä–æ–≥–Ω–æ–∑–∏
def generate_value_bets(n=40):
    leagues = ['Premier League', 'La Liga', 'Serie A', 'Bundesliga']
    markets = ['1X2', 'Over/Under 2.5', 'Both Teams to Score']
    picks = ['1', 'X', '2', 'Over 2.5', 'Under 2.5', 'Yes', 'No']
    teams = ['Team A', 'Team B', 'Team C', 'Team D']
    rows = []
    for _ in range(n):
        team1, team2 = random.sample(teams, 2)
        match_time = datetime.now() + timedelta(hours=random.randint(1, 72))
        market = random.choice(markets)
        pick = random.choice(picks)
        odds = round(random.uniform(1.5, 3.5), 2)
        est_prob = random.uniform(0.35, 0.75)
        implied_prob = 1 / odds
        value = round((est_prob - implied_prob) * 100, 2)
        rows.append({
            '–ú–∞—á': f'{team1} - {team2}',
            '–ß–∞—Å': match_time.strftime('%Y-%m-%d %H:%M'),
            '–õ–∏–≥–∞': random.choice(leagues),
            '–ü–∞–∑–∞—Ä': market,
            '–ó–∞–ª–æ–≥': pick,
            '–ö–æ–µ—Ñ.': odds,
            '–®–∞–Ω—Å (%)': round(est_prob * 100, 1),
            'Value %': value
        })
    df = pd.DataFrame(rows)
    return df[df['Value %'] > 0].sort_values(by='Value %', ascending=False).reset_index(drop=True)

# üìå –ù–∞—á–∞–ª–µ–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
st.title("Value Bets –ü—Ä–æ–≥–Ω–æ–∑–∏")
st.markdown("–§–æ–∫—É—Å –≤—ä—Ä—Ö—É –Ω–∞–π-–¥–æ–±—Ä–∏—Ç–µ —Å—Ç–æ–π–Ω–æ—Å—Ç–Ω–∏ –∑–∞–ª–æ–∑–∏ –ø–æ –ª–æ–≥–∏–∫–∞ –Ω–∞ value %.")

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏
with st.sidebar:
    st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    min_value = st.slider("–ú–∏–Ω–∏–º–∞–ª–µ–Ω Value %", 0.0, 20.0, 4.0, step=0.5)
    max_rows = st.slider("–ú–∞–∫—Å. –±—Ä–æ–π –ø—Ä–æ–≥–Ω–æ–∑–∏", 5, 50, 15)
    
    selected_market = st.selectbox("–§–∏–ª—Ç—ä—Ä –ø–æ –ø–∞–∑–∞—Ä", ["–í—Å–∏—á–∫–∏", "1X2", "Over/Under 2.5", "Both Teams to Score"])
    min_odds, max_odds = st.slider("–§–∏–ª—Ç—ä—Ä –ø–æ –∫–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç", 1.0, 5.0, (1.5, 3.5), 0.1)

    bank = st.number_input("üí∞ –ù–∞—á–∞–ª–Ω–∞ –±–∞–Ω–∫–∞", value=500.0, step=50.0)
    stake_pct = st.slider("–ó–∞–ª–æ–≥ (% –æ—Ç –±–∞–Ω–∫–∞—Ç–∞)", 1, 10, 5)

# üìà –î–∞–Ω–Ω–∏
bets_df = generate_value_bets()
if selected_market != "–í—Å–∏—á–∫–∏":
    bets_df = bets_df[bets_df["–ü–∞–∑–∞—Ä"] == selected_market]
bets_df = bets_df[(bets_df["–ö–æ–µ—Ñ."] >= min_odds) & (bets_df["–ö–æ–µ—Ñ."] <= max_odds)]
filtered_df = bets_df[bets_df['Value %'] >= min_value].head(max_rows)

# üí∞ –ò–∑—á–∏—Å–ª–µ–Ω–∏–µ –Ω–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–Ω–∞ –ø–µ—á–∞–ª–±–∞
stake_amount = round(bank * (stake_pct / 100), 2)
filtered_df["–ó–∞–ª–æ–≥ (–ª–≤)"] = stake_amount
filtered_df["–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª–Ω–∞ –ø–µ—á–∞–ª–±–∞"] = round(filtered_df["–ö–æ–µ—Ñ."] * stake_amount, 2)

# üìä –ü—Ä–æ–≥–Ω–æ–∑–∏
st.subheader("–ü—Ä–µ–ø–æ—Ä—ä—á–∞–Ω–∏ –∑–∞–ª–æ–∑–∏")
st.dataframe(filtered_df, use_container_width=True)

# üìö –ò—Å—Ç–æ—Ä–∏—è
if "history" not in st.session_state:
    st.session_state.history = pd.DataFrame()

if st.button("üìå –î–æ–±–∞–≤–∏ –≤—Å–∏—á–∫–∏ –∫—ä–º –∏—Å—Ç–æ—Ä–∏—è"):
    st.session_state.history = pd.concat([st.session_state.history, filtered_df]).drop_duplicates()

# üßæ –ï–∫—Å–ø–æ—Ä—Ç
if not st.session_state.history.empty:
    st.subheader("üìú –ò—Å—Ç–æ—Ä–∏—è –Ω–∞ –∑–∞–ª–æ–∑–∏—Ç–µ")
    st.dataframe(st.session_state.history.reset_index(drop=True), use_container_width=True)

    csv = st.session_state.history.to_csv(index=False).encode('utf-8')
    st.download_button("üì• –ò–∑—Ç–µ–≥–ª–∏ –∏—Å—Ç–æ—Ä–∏—è –∫–∞—Ç–æ CSV", csv, file_name="bets_history.csv", mime="text/csv")

    # üìà –ì—Ä–∞—Ñ–∏–∫–∞ –Ω–∞ –ø–µ—á–∞–ª–±–∞—Ç–∞ –ø–æ –¥–Ω–∏ (—Å–∏–º—É–ª–∞—Ü–∏—è)
    st.subheader("üìà –ü–µ—á–∞–ª–±–∞ –ø–æ –¥–Ω–∏ (—Å–∏–º—É–ª–∞—Ü–∏—è)")
    history = st.session_state.history.copy()
    history["–î–∞—Ç–∞"] = pd.to_datetime(history["–ß–∞—Å"]).dt.date
    history["–ü–µ—á–∞–ª–±–∞"] = history["–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª–Ω–∞ –ø–µ—á–∞–ª–±–∞"] - history["–ó–∞–ª–æ–≥ (–ª–≤)"]
    daily = history.groupby("–î–∞—Ç–∞")["–ü–µ—á–∞–ª–±–∞"].sum().cumsum()
    fig, ax = plt.subplots()
    daily.plot(ax=ax)
    ax.set_title("–ù–∞—Ç—Ä—É–ø–∞–Ω–∞ –ø–µ—á–∞–ª–±–∞ –ø–æ –¥–Ω–∏")
    ax.set_ylabel("–ª–≤")
    st.pyplot(fig)
