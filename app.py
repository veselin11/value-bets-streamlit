import streamlit as st
import requests
import pandas as pd
from datetime import datetime
from pytz import timezone
import logging

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
try:
    ODDS_API_KEY = st.secrets["ODDS_API_KEY"]
except KeyError:
    st.error("‚ùå –õ–∏–ø—Å–≤–∞ API –∫–ª—é—á –≤ secrets.toml")
    st.stop()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
LOCAL_TZ = timezone("Europe/Sofia")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ –ª–æ–≥–∏—Ä–∞–Ω–µ—Ç–æ
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

def get_all_soccer_leagues():
    """–í–∑–µ–º–∏ –≤—Å–∏—á–∫–∏ —Ñ—É—Ç–±–æ–ª–Ω–∏ –ª–∏–≥–∏ —Å –Ω–æ–≤–∞ —Ñ–∏–ª—Ç—Ä–∞—Ü–∏—è"""
    try:
        response = requests.get(
            "https://api.the-odds-api.com/v4/sports",
            params={"apiKey": ODDS_API_KEY},
            timeout=15
        )
        
        if response.status_code != 200:
            logger.error(f"API –ì—Ä–µ—à–∫–∞: {response.status_code}")
            return []
            
        return [
            league["key"] 
            for league in response.json()
            if league["sport_key"].startswith("soccer") 
            and league["active"] is True
        ]
        
    except Exception as e:
        logger.error(f"–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤–∑–∏–º–∞–Ω–µ –Ω–∞ –ª–∏–≥–∏: {str(e)}")
        return []

def main():
    st.set_page_config(page_title="Global Bets Solution", layout="wide")
    st.title("‚öΩ Value Bets - –†–∞–±–æ—Ç–µ—â–æ –†–µ—à–µ–Ω–∏–µ")
    
    # –ó–∞—Ä–µ–¥–∏ –ª–∏–≥–∏
    leagues = get_all_soccer_leagues()
    
    if not leagues:
        st.error("–ù–µ —Å–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–∏ —Ñ—É—Ç–±–æ–ª–Ω–∏ –ª–∏–≥–∏")
        return
    
    st.success(f"–ù–∞–º–µ—Ä–µ–Ω–∏ {len(leagues)} –ª–∏–≥–∏")
    
    # –ü–æ–∫–∞–∂–∏ –ø—ä—Ä–≤–∏ 10 –º–∞—á–∞ –æ—Ç –ø—ä—Ä–≤–∞—Ç–∞ –ª–∏–≥–∞ –∑–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
    if st.button("–ü–æ–∫–∞–∂–∏ –ø—Ä–∏–º–µ—Ä–Ω–∏ –º–∞—á–æ–≤–µ"):
        try:
            matches = requests.get(
                f"https://api.the-odds-api.com/v4/sports/{leagues[0]}/odds",
                params={
                    "apiKey": ODDS_API_KEY,
                    "regions": "eu",
                    "markets": "h2h"
                },
                timeout=15
            ).json()
            
            st.subheader(f"–ü—Ä–∏–º–µ—Ä–Ω–∏ –º–∞—á–æ–≤–µ –æ—Ç {leagues[0]}:")
            for match in matches[:5]:
                commence_time = datetime.fromisoformat(match["commence_time"]).astimezone(LOCAL_TZ)
                st.write(f"""
                    - {match["home_team"]} vs {match["away_team"]}
                    ‚è∞ {commence_time.strftime("%d.%m %H:%M")}
                    üìä {len(match["bookmakers"])} –±—É–∫–º–µ–π–∫—ä—Ä–∞
                """)
                
        except Exception as e:
            st.error(f"–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤–∑–∏–º–∞–Ω–µ –Ω–∞ –º–∞—á–æ–≤–µ: {str(e)}")

if __name__ == "__main__":
    main()
