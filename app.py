import streamlit as st
import requests
import pandas as pd
from datetime import datetime
from pytz import timezone
import logging

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
try:
    ODDS_API_KEY = st.secrets["ODDS_API_KEY"]
except KeyError:
    st.error("‚ùå –õ–∏–ø—Å–≤–∞ API –∫–ª—é—á –≤ secrets.toml")
    st.stop()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
LOCAL_TZ = timezone("Europe/Sofia")
FALLBACK_LEAGUES = [
    "soccer_epl", "soccer_spain_la_liga", 
    "soccer_germany_bundesliga", "soccer_italy_serie_a"
]

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ –ª–æ–≥–∏—Ä–∞–Ω–µ—Ç–æ
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

def debug_api_response(response: requests.Response):
    """–î–µ–±—ä–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ API –æ—Ç–≥–æ–≤–æ—Ä–∏"""
    debug_info = {
        "status_code": response.status_code,
        "headers": dict(response.headers),
        "first_100_chars": response.text[:100],
        "url": response.url
    }
    return debug_info

def get_all_soccer_leagues():
    """–í–∑–µ–º–∏ –≤—Å–∏—á–∫–∏ —Ñ—É—Ç–±–æ–ª–Ω–∏ –ª–∏–≥–∏ —Å –ø–æ–¥–æ–±—Ä–µ–Ω–∞ —Ñ–∏–ª—Ç—Ä–∞—Ü–∏—è"""
    try:
        response = requests.get(
            "https://api.the-odds-api.com/v4/sports",
            params={"apiKey": ODDS_API_KEY},
            timeout=15
        )
        
        logger.debug(f"API Debug: {debug_api_response(response)}")
        
        if response.status_code != 200:
            logger.error(f"API –ì—Ä–µ—à–∫–∞: {response.status_code} - {response.text}")
            return FALLBACK_LEAGUES
            
        all_leagues = response.json()
        soccer_leagues = []
        
        for league in all_leagues:
            # –†–∞–∑—à–∏—Ä–µ–Ω–∞ —Ñ–∏–ª—Ç—Ä–∞—Ü–∏—è
            is_soccer = (
                "soccer" in league["key"].lower() or 
                "football" in league["title"].lower()
            )
            has_odds = league["active"]
            is_match_based = any(word in league["description"].lower() 
                             for word in ["match", "game", "fixture"])
            
            if is_soccer and has_odds and is_match_based:
                soccer_leagues.append({
                    "key": league["key"],
                    "title": league["title"],
                    "active": league["active"],
                    "details": league["description"]
                })
        
        if not soccer_leagues:
            logger.warning("–§–∞–ª–±–µ–∫ –∫—ä–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª–Ω–∏ –ª–∏–≥–∏")
            return FALLBACK_LEAGUES
            
        return [league["key"] for league in soccer_leagues]
        
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–Ω–∞ –≥—Ä–µ—à–∫–∞: {str(e)}", exc_info=True)
        return FALLBACK_LEAGUES

def main():
    st.set_page_config(page_title="Global Bets Debug", layout="wide")
    st.title("üîç –î–µ–±—ä–≥ –Ω–∞ –§—É—Ç–±–æ–ª–Ω–∏ –õ–∏–≥–∏")
    
    # –†—ä—á–Ω–æ —Ç–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ API
    with st.expander("üêû –†—ä—á–µ–Ω API –¢–µ—Å—Ç–µ—Ä"):
        test_key = st.text_input("–í—ä–≤–µ–¥–∏ API –∫–ª—é—á –∑–∞ —Ç–µ—Å—Ç", type="password")
        if st.button("–¢–µ—Å—Ç–≤–∞–π API"):
            try:
                test_response = requests.get(
                    "https://api.the-odds-api.com/v4/sports",
                    params={"apiKey": test_key or ODDS_API_KEY}
                )
                st.json(debug_api_response(test_response))
            except Exception as e:
                st.error(f"–¢–µ—Å—Ç–æ–≤–∞ –≥—Ä–µ—à–∫–∞: {str(e)}")
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ
    st.subheader("–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ—Ç–∫—Ä–∏–≤–∞–Ω–µ –Ω–∞ –ª–∏–≥–∏")
    leagues = get_all_soccer_leagues()
    
    if not leagues:
        st.error("""
            üö® –ö—Ä–∏—Ç–∏—á–µ–Ω –ø—Ä–æ–±–ª–µ–º:
            1. –ü—Ä–æ–≤–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –≤—Ä—ä–∑–∫–∞
            2. –ü—Ä–æ–≤–µ—Ä–∏ API –∫–ª—é—á
            3. –û–ø–∏—Ç–∞–π —Å —Ä–∞–∑–ª–∏—á–µ–Ω —Ä–µ–≥–∏–æ–Ω
            """)
        return
    
    st.success(f"–ù–∞–º–µ—Ä–µ–Ω–∏ –ª–∏–≥–∏ ({len(leagues)}):")
    for league in leagues:
        st.write(f"- {league}")
    
    # –î–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    with st.expander("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏ –¥–µ—Ç–∞–π–ª–∏"):
        st.write("""
            **–õ–æ–≥–∏–∫–∞ –Ω–∞ —Ñ–∏–ª—Ç—Ä–∞—Ü–∏—è:**
            1. –ö–ª—é—á —Å—ä–¥—ä—Ä–∂–∞ 'soccer'
            2. –ê–∫—Ç–∏–≤–Ω–∏ –ª–∏–≥–∏
            3. –û–ø–∏—Å–∞–Ω–∏–µ —Å—ä–¥—ä—Ä–∂–∞ 'match', 'game' –∏–ª–∏ 'fixture'
            """)

if __name__ == "__main__":
    main()
