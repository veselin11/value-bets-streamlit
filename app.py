import streamlit as st
import datetime
from data_loader import load_matches_from_api
from predictor import predict
from train_model import train_model

BANKROLL_DEFAULT = 500

def calculate_stake(value, bankroll):
    base_stake = bankroll * 0.05
    stake = base_stake * value
    return min(stake, bankroll * 0.1)

def main():
    st.sidebar.title("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    bankroll = st.sidebar.number_input("–ù–∞—á–∞–ª–Ω–∞ –±–∞–Ω–∫–∞ (–ª–≤)", value=BANKROLL_DEFAULT, step=50)
    date_to_load = st.sidebar.date_input("–î–∞—Ç–∞ –∑–∞ –º–∞—á–æ–≤–µ", value=datetime.date.today())

    st.title("üéØ Value Bets –ü—Ä–æ–≥–Ω–æ–∑–∏")

    if st.button("–û–±—É—á–µ–Ω–∏–µ –Ω–∞ –º–æ–¥–µ–ª"):
        with st.spinner("–û–±—É—á–∞–≤–∞–º –º–æ–¥–µ–ª–∞..."):
            train_model()
        st.success("–û–±—É—á–µ–Ω–∏–µ—Ç–æ –µ —É—Å–ø–µ—à–Ω–æ!")

    matches_df = load_matches_from_api(date_to_load)
    if matches_df.empty:
        st.warning("–ù—è–º–∞ –Ω–∞–ª–∏—á–Ω–∏ –º–∞—á–æ–≤–µ –∑–∞ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–∞–Ω–µ.")
        return

    st.write(f"–ù–∞–º–µ—Ä–µ–Ω–∏ –º–∞—á–æ–≤–µ: {len(matches_df)}")
    st.dataframe(matches_df)

    try:
        preds_df = predict(matches_df)
        preds_df["–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∞ —Å—É–º–∞ –∑–∞ –∑–∞–ª–æ–≥ (–ª–≤)"] = preds_df["value"].apply(lambda v: calculate_stake(v, bankroll))

        st.write("–ü—Ä–æ–≥–Ω–æ–∑–∏ –∑–∞ Value Bets:")
        st.dataframe(preds_df)
    except Exception as e:
        st.error(f"–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–∞–Ω–µ: {e}")

if __name__ == "__main__":
    main()
