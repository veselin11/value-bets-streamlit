import streamlit as st
import pandas as pd
from data_loader import load_upcoming_matches
from predictor import load_model, load_encoders, predict_probabilities

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ
st.set_page_config(page_title="Value Bets", layout="wide")
st.title("üéØ –°—Ç–æ–π–Ω–æ—Å—Ç–Ω–∏ –ó–∞–ª–æ–∑–∏")

# –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –º–∞—á–æ–≤–µ –∏ –º–æ–¥–µ–ª
matches = load_upcoming_matches()
model = load_model()
encoders = load_encoders()

# –ë—É—Ç–æ–Ω –∑–∞ –∏–∑—á–∏—Å–ª—è–≤–∞–Ω–µ –Ω–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç–Ω–∏ –∑–∞–ª–æ–∑–∏
if st.button("üîç –ü–æ–∫–∞–∂–∏ —Å—Ç–æ–π–Ω–æ—Å—Ç–Ω–∏ –ø—Ä–æ–≥–Ω–æ–∑–∏"):
    rows = []

    for _, row in matches.iterrows():
        df_match = pd.DataFrame([row])  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–≤–∞–º–µ —Ä–µ–¥–∞ –≤ DataFrame
        probs = predict_probabilities(model, df_match, encoders)

        model_prob = probs[0][1]  # –ü—Ä–∏–º–µ—Ä: –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç –∑–∞ –ø–æ–±–µ–¥–∞ –Ω–∞ –û—Ç–±–æ—Ä 1
        implied_prob = 1 / row["–ö–æ–µ—Ñ"]
        value_pct = (model_prob - implied_prob) * 100

        rows.append({
            "–ú–∞—á": f"{row['–û—Ç–±–æ—Ä 1']} - {row['–û—Ç–±–æ—Ä 2']}",
            "–ö–æ–µ—Ñ": row["–ö–æ–µ—Ñ"],
            "–®–∞–Ω—Å (–º–æ–¥–µ–ª)": f"{model_prob*100:.1f}%",
            "–ò–º–ø–ª–∏—Ü–∏—Ç–µ–Ω —à–∞–Ω—Å": f"{implied_prob*100:.1f}%",
            "Value %": f"{value_pct:.2f}"
        })

    df_out = pd.DataFrame(rows)
    df_out = df_out.sort_values(by="Value %", ascending=False)
    st.dataframe(df_out, use_container_width=True)
